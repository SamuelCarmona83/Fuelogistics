# version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: fuel_truck_db
    volumes:
      - mongo_data:/data/db
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - fuel-truck-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Fuel Truck Management Application (Development)
  app-dev:
    build:
      context: .
      target: dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongo:27017/fuel_truck_db
      SESSION_SECRET: fuel_truck_session_secret_dev_2024
      PORT: 5001
    ports:
      - "5001:5001"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fuel-truck-network
    profiles:
      - dev

  # Fuel Truck Management Application (Production)
  app-prod:
    build:
      context: .
      target: production
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongo:27017/fuel_truck_db
      SESSION_SECRET: fuel_truck_session_secret_prod_2024
      PORT: 5001
    ports:
      - "5001:5001"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fuel-truck-network
    profiles:
      - prod

  # Redis for session storage (optional enhancement)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fuel-truck-network
    profiles:
      - enhanced

networks:
  fuel-truck-network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  redis_data:
    driver: local